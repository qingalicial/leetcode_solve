Write a function to find the longest common prefix string amongst an array of strings.编写一个函数来查找字符串数组中最长的公共前缀字符串。

Given a sorted array, remove the duplicates in-place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
给定一个有序数组，删除重复内容，使每个元素只出现一次并返回新的长度。不要为其他数组分配额外空间，您必须通过在 O（1）额外内存中就地修改输入数组来完成此操作。

Example:
Given nums = [1,1,2],你的函数应该返回length=2， with the first two elements of nums being 1 and 2 respectively.
It doesn't matter what you leave beyond the new length.

 i = 1
        while i < len(nums):
            if nums[i] == nums[i - 1]:
                nums.pop(i)
                continue
            else:
                i += 1
        return len(nums)   
        
        

  def removeDuplicates(self, A):
        if not A:
            return 0

        newTail = 0

        for i in range(1, len(A)):
            if A[i] != A[newTail]:
                newTail += 1
                A[newTail] = A[i]

        return newTail + 1
        
    nums[:] =  OrderedDict.fromkeys(nums).keys()
        return len(nums)
        
        
 
            
